03 9c 40 20  // [00400000] add $8, $28, $28                ; 10: add $t0, $gp, $gp       # $t0 = 2 * $gp
01 1c 48 22  // [00400004] sub $9, $8, $28                 ; 11: sub $t1, $t0, $gp       # $t1 = $gp
01 09 50 24  // [00400008] and $10, $8, $9                 ; 12: and $t2, $t0, $t1       # $t2 = $t0 & $t1
01 09 58 25  // [0040000c] or $11, $8, $9                  ; 13: or  $t3, $t0, $t1       # $t3 = $t0 | $t1
01 28 60 2a  // [00400010] slt $12, $9, $8                 ; 14: slt $t4, $t1, $t0       # $t4 = $t1 < $t0 ? 1 : 0; $t4 = 1
11 09 00 06  // [00400014] beq $8, $9, 24 [Label3-0x00400014]; 15: beq $t0, $t1, Label3    # should not execute
15 80 00 04  // [00400018] bne $12, $0, 16 [Label2-0x00400018]; 16: bne $t4, $zero, Label2  # should branch
3c 01 10 01  // [0040001c] lui $1, 4097                    ; 18: lw $t6, hun             # test LW
8c 2e 80 00  // [00400020] lw $14, -32768($1)
af 8e 00 04  // [00400024] sw $14, 4($28)                  ; 19: sw $t6, 4($gp)          # test SW
08 10 00 0c  // [00400028] j 0x00400030 [Label3]           ; 20: j  Label3               # test jump
08 10 00 07  // [0040002c] j 0x0040001c [Label1]           ; 22: j  Label1               # test jump
34 0e 00 64  // [00400030] ori $14, $0, 100                ; 24: li $t6, 100              # $t6 = 100